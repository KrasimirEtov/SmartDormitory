@model SensorPartialTableViewModel

@{
    var previousDisabled = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty;
}


<table class="table table-hover table-striped table-fixed">
    <thead class="thead-dark">
        <tr>
            <th class="h5 text-center">Sensor name</th>
            <th class="h5 text-center">Owner</th>
            <th class="h5 text-center">Sensor type</th>
            <th class="h5 text-center">Privacy</th>
            <th class="h5 text-center">Alarm</th>
            <th class="h5 text-center">State</th>
            <th class="h5 text-center">Details</th>
        </tr>
    </thead>
    <tbody class="bg-white">

        @foreach (var sensor in Model.Sensors)
        {
            string privacyIcon = sensor.IsPublic ? "fas fa-globe-americas" : "fas fa-user-secret";
            string privacyColor = sensor.IsPublic ? "text-primary" : "text-warning";
            string alarmIcon = sensor.AlarmOn ? "fas fa-bell" : "far fa-bell-slash";
            string alarmColor = sensor.AlarmOn ? "text-danger" : "";

            <tr>
                <td>
                    <a class="h6" asp-area="" asp-controller="Sensor" asp-action="Details" asp-route-sensorId="@(sensor.Id)">
                        <span class="badge badge-pill badge-primary"> <i class="fas fa-info"></i></span>
                        <span >@sensor.Name</span>
                    </a>
                </td>
                <td>
                    <a asp-area="Identity" asp-route-userId="@(sensor.OwnerId)" asp-page="/Account/Manage/Index">
                        @sensor.OwnerUsername
                    </a>
                </td>
                <td class="text-danger text-center">@sensor.SensorType</td>
                <td class="h4 @privacyColor text-center"><i class="@privacyIcon"></i></td>
                <td class="h4 @alarmColor text-center"><i class="@alarmIcon"></i></td>
                <td class="text-center">
                    @{
                        string buttonClass = !sensor.IsDeleted ? "btn-danger" : "btn-dark-green";
                        string buttonTitle = sensor.IsDeleted ? "Restore" : "Delete";
                        string glyph = sensor.IsDeleted ? "fas fa-redo" : "far fa-trash-alt";
                    }
                    <form asp-area="Administration" asp-controller="Sensor"
                          asp-action="ToggleDelete" method="post" data-sensor-id="@sensor.Id">
                        <button class="deleteToggleButton btn btn waves-effect @buttonClass" type="submit">
                            <i class="icon @glyph"></i>
                        </button>
                    </form>
                </td>
                <td class="text-center">
                    <a asp-area="Administration" asp-controller="Sensor"
                       asp-action="Update" asp-route-sensorId="@sensor.Id"
                       class=" btn btn-secondary waves-effect">
                        <i class="far fa-edit"></i>
                    </a>
                </td>
            </tr>

        }
    </tbody>
</table>

@if (!Model.Sensors.Any())
{
    <p class="display-4 text-primary">There are no sensors by choosen criteria</p>
}

<ul class="pagination">
    <li class="page-item">
        <a class="page-link @previousDisabled" id="prevPage" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>
    @if (Model.TotalPages > 1)
    {
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)">
                <a onclick="goToPageNumber(this)" data-page-number="@i" class="page-link">
                    @i
                </a>
            </li>
        }
    }
    <li class="page-item">
        <a class="page-link @nextDisabled" id="nextPage" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>
</ul>


<script>
    $(function () {
        const movePage = function (tagId, targetPage) {
            $(tagId).click(function () {
                let typeId = $("#MeasureTypeId").val();
                let isPublic = $("#IsPublic").val();
                let alarmSet = $("#AlarmSet").val();
                let url = "@Url.Action("LoadSensorsTable", "Sensor")?measureTypeId=" + typeId +
                  "&isPublic=" + isPublic + "&alarmSet=" + alarmSet + "&page=" + targetPage;

                $("#sensorsTable").load(url);
            })
        }

        movePage("#nextPage", @Model.NextPage);
        movePage("#prevPage", @Model.PreviousPage);

        $("form[id!='logoutForm']").on('submit', function (event) {
            event.preventDefault();
            const tokenValue = $('input[name="__RequestVerificationToken"]').val();
            const sensorId = $(this).data('sensorId');

            $.post($(this).attr('action'), { sensorId: sensorId, __RequestVerificationToken: tokenValue }, function () {
            });
        });

        $('button.deleteToggleButton').click(function () {

            const deleteBtn = 'btn-danger';
            const restoreBtn = 'btn-dark-green';
            const deleteBtnText = '<i class="far fa-trash-alt"></i>';
            const restoreBtnText = '<i class="fas fa-redo"></i>';

            if ($(this).hasClass(deleteBtn)) {
                $(this).removeClass(deleteBtn).addClass(restoreBtn);
                $(this).html(restoreBtnText);
            }
            else if ($(this).hasClass(restoreBtn)) {
                $(this).removeClass(restoreBtn).addClass(deleteBtn);
                $(this).html(deleteBtnText);
            }
        });
    });

</script>
